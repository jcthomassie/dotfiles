---
version: '>=0.7.0, 0.8.0-dev'
build:
  - !repo
      path: ~/dotfiles
      url: https://github.com/jcthomassie/dotfiles.git
  - !repo
      path: ~/yurt
      url: https://github.com/jcthomassie/yurt.git

  # OS specifics:
  - !case
    - condition: !any
        - !locale { distro: ubuntu }
        - !locale { distro: debian }
      include:
        - !package_manager
            name: apt
            shell_has: dpkg -l ${{ package.alias }}
            shell_install: apt install -y ${{ package.alias }}
            shell_uninstall: apt remove -y ${{ package.alias }}
        - !package_manager
            name: apt-get
            shell_has: dpkg -l ${{ package.alias }}
            shell_install: apt-get install -y ${{ package.alias }}
            shell_uninstall: apt-get remove -y ${{ package.alias }}
    - condition: !locale { platform: bsd }
      include:
        - !package_manager
            name: pkg
            shell_has: pkg info ${{ package.alias }}
            shell_install: pkg install -y ${{ package.alias }}
            shell_uninstall: pkg remove -y ${{ package.alias }}
    - condition: !locale { platform: windows }
      include:
        - !package_manager
            name: choco
            shell_install: choco install -y ${{ package.alias }}
            shell_uninstall: choco uninstall -y ${{ package.alias }}
    - condition: !default
      include:
        - !package_manager
            name: brew
            shell_bootstrap: curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh
            shell_has: brew list ${{ package.alias }}
            shell_install: brew install -y ${{ package.alias }}
            shell_uninstall: brew uninstall -y ${{ package.alias }}

  - !case
    # Ubuntu only
    - condition: !locale { distro: ubuntu }
      include:
        - !package { name: build-essential }
        - !package { name: libffi-dev }
        - !package { name: libssl-dev }
        - !package { name: pkg-config }

  # Platform specifics
  - !case
    # Windows only
    - condition: !locale { platform: windows }
      include:
        - !link
            target: ${{ repo#dotfiles.path }}/pwsh/profile.ps1
            source: ~/Documents/PowerShell/Microsoft.PowerShell_profile.ps1
        - !link
            target: ${{ repo#dotfiles.path }}/nvim
            source: ${{ env:LocalAppData }}/nvim
        - !link
            target: ${{ repo#dotfiles.path }}/.wt.json
            source: ${{ env:LocalAppData }}/Packages/Microsoft.WindowsTerminal_8wekyb3d8bbwe/LocalState/settings.json
        - !link
            target: ${{ repo#dotfiles.path }}/git/.gitconfig.os.win
            source: ~/.gitconfig.os
    # Posix only
    - condition: !default
      include:
        - !package { name: zsh }
        - !package { name: exa }
        - !package { name: grep }
        - !package { name: curl }
        - !link
            target: ${{ repo#dotfiles.path }}/zsh/.zshenv
            source: ~/.zshenv
        - !link
            target: ${{ repo#dotfiles.path }}/nvim
            source: ~/.config/nvim
        - !link
            target: ${{ repo#dotfiles.path }}/git/.gitconfig.os.posix
            source: ~/.gitconfig.os

  # Install rust toolchain
  - !package_manager
      name: cargo
      shell_bootstrap: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
      shell_has: cargo install --list | grep '^${{ package.alias }} v'
      shell_install: cargo install ${{ package.alias }}
      shell_uninstall: cargo uninstall ${{ package.alias }}
  - !package
      name: cargo-edit
      managers: [ cargo ]

  # Install essential packages
  - !package { name: git }
  - !package { name: bat }
  - !package { name: nvim }
  - !package { name: gh }
  - !package { name: zoxide }
  - !package { name: ripgrep }
  - !package
      name: delta
      aliases: { brew: git-delta, cargo: git-delta }
  - !package
      name: pyenv
      aliases: { choco: pyenv-win }
      managers: [ brew, choco ]

  # Apply symlinks
  - !link
      target: ${{ repo#dotfiles.path }}/git/.gitconfig
      source: ~/.gitconfig
  - !link
      target: ${{ repo#dotfiles.path }}/git/.gitignore_global
      source: ~/.gitignore_global
  - !link
      target: ${{ repo#dotfiles.path }}/ssh/.ssh_config
      source: ~/.ssh/config

  # User specific configs
  - !case
    - condition: !locale { user: julianth }
      include:
        - !link
            target: ${{ repo#dotfiles.path }}/git/.gitconfig.user.julianth
            source: ~/.gitconfig.user
        - !link
            target: ${{ repo#dotfiles.path }}/ssh/.ssh_config.user.julianth
            source: ~/.ssh/config.user
    - condition: !default
      include:
        - !link
            target: ${{ repo#dotfiles.path }}/git/.gitconfig.user.default
            source: ~/.gitconfig.user
        - !link
            target: ${{ repo#dotfiles.path }}/ssh/.ssh_config.user.default
            source: ~/.ssh/config.user
